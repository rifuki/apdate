services:
  app:
    build: .
    container_name: ${COMPOSE_PROJECT_NAME:-apdate}-app
    restart: unless-stopped
    volumes:
      - ./upload:/var/www/html/upload
      - ./application/logs:/var/www/html/application/logs
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_NAME=${DB_NAME:-apdate}
      - DB_USER=${DB_USER:-root}
      - DB_PASS=${DB_PASS}
      - APP_ENV=${APP_ENV:-production}
      - CI_ENV=${CI_ENV:-production}
      - BASE_URL=${BASE_URL}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - db
    networks:
      - apdate-network

  db:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME:-apdate}-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME:-apdate}
      MYSQL_USER: ${DB_USER_NON_ROOT:-apdate_user}
      MYSQL_PASSWORD: ${DB_USER_PASS}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./DB_APDATE.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/prod/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASS}"]
      timeout: 20s
      retries: 10
    networks:
      - apdate-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME:-apdate}-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: ${DB_HOST:-db}
      PMA_PORT: 3306
      PMA_USER: ${DB_USER:-root}
      PMA_PASSWORD: ${DB_PASS}
      PMA_ABSOLUTE_URI: https://${PHPMYADMIN_DOMAIN}/
    depends_on:
      - db
    networks:
      - apdate-network

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME:-apdate}-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/prod/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/prod/sites:/etc/nginx/sites-available
      - ./docker/prod/ssl:/etc/nginx/ssl
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - app
      - phpmyadmin
    networks:
      - apdate-network

  certbot:
    image: certbot/certbot
    container_name: ${COMPOSE_PROJECT_NAME:-apdate}-certbot
    restart: unless-stopped
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    command: >
      sh -c "while :; do
        certbot renew --webroot --webroot-path=/var/www/certbot --quiet
        sleep 12h
      done"
    networks:
      - apdate-network

volumes:
  mysql_data:
  certbot_www:
  certbot_conf:

networks:
  apdate-network:
    driver: bridge